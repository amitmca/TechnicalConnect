{"ast":null,"code":"import { map } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/system.service\";\nimport * as i2 from \"@angular/common\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(systemService) {\n      this.systemService = systemService;\n    }\n    ngOnInit() {\n      this.version$ = this.systemService.getVersion().pipe(map(value => value.version));\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SystemService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 5,\n    vars: 3,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Hi There\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h3\");\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"App version is: \", i0.ɵɵpipeBind1(4, 1, ctx.version$), \"\");\n      }\n    },\n    dependencies: [CommonModule, i2.AsyncPipe]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}